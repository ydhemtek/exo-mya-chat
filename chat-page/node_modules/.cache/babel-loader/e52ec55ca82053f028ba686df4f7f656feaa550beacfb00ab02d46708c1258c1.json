{"ast":null,"code":"var _jsxFileName = \"/home/mehdycament/Bureau/app_message_symfony/chat-page/src/components/Layout/Sidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../../contexts/AuthContext';\nimport { ChatContext } from '../../contexts/ChatContext';\nimport UserItem from '../Chat/UserItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = () => {\n  _s();\n  var _currentUser$username;\n  const {\n    currentUser,\n    logoutUser\n  } = useContext(AuthContext);\n  const {\n    onlineUsers,\n    fetchUsers,\n    setSelectedUser\n  } = useContext(ChatContext);\n  const [allUsers, setAllUsers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const loadUsers = async () => {\n      try {\n        const users = await fetchUsers();\n        setAllUsers(users || []); // S'assurer qu'allUsers est toujours un tableau\n      } catch (error) {\n        console.error(\"Erreur lors du chargement des utilisateurs:\", error);\n        setAllUsers([]); // En cas d'erreur, initialiser avec un tableau vide\n      }\n    };\n    loadUsers();\n    // Rafraîchir la liste des utilisateurs toutes les 30 secondes\n    const interval = setInterval(loadUsers, 30000);\n    return () => clearInterval(interval);\n  }, [fetchUsers]);\n  const handleLogout = () => {\n    // D'abord, nettoyer le localStorage\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n\n    // Ensuite, appeler la fonction logoutUser du contexte\n    logoutUser();\n\n    // Finalement, rediriger\n    navigate('/login');\n  };\n\n  // Filtrer les utilisateurs en fonction du terme de recherche\n  const filteredUsers = searchTerm && allUsers ? allUsers.filter(user => user.username.toLowerCase().includes(searchTerm.toLowerCase())) : allUsers || []; // S'assurer que filteredUsers est toujours un tableau\n\n  // Ajouter un indicateur en ligne à chaque utilisateur\n  const usersWithOnlineStatus = Array.isArray(filteredUsers) ? filteredUsers.map(user => ({\n    ...user,\n    isOnline: Array.isArray(onlineUsers) && onlineUsers.some(onlineUser => onlineUser.id === user.id)\n  })) : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-profile\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar\",\n          children: (currentUser === null || currentUser === void 0 ? void 0 : (_currentUser$username = currentUser.username) === null || _currentUser$username === void 0 ? void 0 : _currentUser$username.charAt(0)) || '?'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.username) || 'Utilisateur'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status online\",\n            children: \"En ligne\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-button\",\n        onClick: handleLogout,\n        children: \"D\\xE9connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Rechercher un utilisateur...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users-list\",\n      children: usersWithOnlineStatus.length > 0 ? usersWithOnlineStatus.map(user => /*#__PURE__*/_jsxDEV(UserItem, {\n        user: user,\n        onClick: () => setSelectedUser(user)\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-users\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Aucun utilisateur trouv\\xE9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"AT3Swd7DXu/BDCKmpf6LRnHsoj8=\", false, function () {\n  return [useNavigate];\n});\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useNavigate","AuthContext","ChatContext","UserItem","jsxDEV","_jsxDEV","Sidebar","_s","_currentUser$username","currentUser","logoutUser","onlineUsers","fetchUsers","setSelectedUser","allUsers","setAllUsers","searchTerm","setSearchTerm","navigate","loadUsers","users","error","console","interval","setInterval","clearInterval","handleLogout","localStorage","removeItem","filteredUsers","filter","user","username","toLowerCase","includes","usersWithOnlineStatus","Array","isArray","map","isOnline","some","onlineUser","id","className","children","charAt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","length","_c","$RefreshReg$"],"sources":["/home/mehdycament/Bureau/app_message_symfony/chat-page/src/components/Layout/Sidebar.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../../contexts/AuthContext';\nimport { ChatContext } from '../../contexts/ChatContext';\nimport UserItem from '../Chat/UserItem';\n\nconst Sidebar = () => {\n  const { currentUser, logoutUser } = useContext(AuthContext);\n  const { onlineUsers, fetchUsers, setSelectedUser } = useContext(ChatContext);\n  const [allUsers, setAllUsers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const loadUsers = async () => {\n      try {\n        const users = await fetchUsers();\n        setAllUsers(users || []); // S'assurer qu'allUsers est toujours un tableau\n      } catch (error) {\n        console.error(\"Erreur lors du chargement des utilisateurs:\", error);\n        setAllUsers([]); // En cas d'erreur, initialiser avec un tableau vide\n      }\n    };\n    \n    loadUsers();\n    // Rafraîchir la liste des utilisateurs toutes les 30 secondes\n    const interval = setInterval(loadUsers, 30000);\n    \n    return () => clearInterval(interval);\n  }, [fetchUsers]);\n\n  const handleLogout = () => {\n    // D'abord, nettoyer le localStorage\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    \n    // Ensuite, appeler la fonction logoutUser du contexte\n    logoutUser();\n    \n    // Finalement, rediriger\n    navigate('/login');\n  };\n\n  // Filtrer les utilisateurs en fonction du terme de recherche\n  const filteredUsers = searchTerm && allUsers \n    ? allUsers.filter(user => \n        user.username.toLowerCase().includes(searchTerm.toLowerCase())\n      )\n    : allUsers || []; // S'assurer que filteredUsers est toujours un tableau\n  \n  // Ajouter un indicateur en ligne à chaque utilisateur\n  const usersWithOnlineStatus = Array.isArray(filteredUsers) \n    ? filteredUsers.map(user => ({\n        ...user,\n        isOnline: Array.isArray(onlineUsers) && onlineUsers.some(onlineUser => onlineUser.id === user.id)\n      }))\n    : [];\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar-header\">\n        <div className=\"user-profile\">\n          <div className=\"avatar\">\n            {currentUser?.username?.charAt(0) || '?'}\n          </div>\n          <div className=\"user-info\">\n            <h3>{currentUser?.username || 'Utilisateur'}</h3>\n            <span className=\"status online\">En ligne</span>\n          </div>\n        </div>\n        <button className=\"logout-button\" onClick={handleLogout}>\n          Déconnexion\n        </button>\n      </div>\n      \n      <div className=\"search-container\">\n        <input\n          type=\"text\"\n          placeholder=\"Rechercher un utilisateur...\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          className=\"search-input\"\n        />\n      </div>\n      \n      <div className=\"users-list\">\n        {usersWithOnlineStatus.length > 0 ? (\n          usersWithOnlineStatus.map((user) => (\n            <UserItem\n              key={user.id}\n              user={user}\n              onClick={() => setSelectedUser(user)}\n            />\n          ))\n        ) : (\n          <div className=\"no-users\">\n            <p>Aucun utilisateur trouvé</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}