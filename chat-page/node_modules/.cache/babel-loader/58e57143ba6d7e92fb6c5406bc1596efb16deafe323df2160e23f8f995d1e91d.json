{"ast":null,"code":"var _jsxFileName = \"/home/mehdycament/Bureau/app_message_symfony/chat-page/src/components/Chat/ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useRef } from 'react';\nimport { ChatContext } from '../../contexts/ChatContext';\nimport { AuthContext } from '../../contexts/AuthContext';\nimport Message from './Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = () => {\n  _s();\n  const {\n    messages,\n    loading\n  } = useContext(ChatContext);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const messagesEndRef = useRef(null);\n\n  // Faire défiler automatiquement vers le bas lorsque de nouveaux messages arrivent\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Fonction pour grouper les messages par date\n  const groupMessagesByDate = messages => {\n    const groups = {};\n    messages.forEach(message => {\n      const date = new Date(message.timestamp).toLocaleDateString();\n      if (!groups[date]) {\n        groups[date] = [];\n      }\n      groups[date].push(message);\n    });\n    return groups;\n  };\n  const messageGroups = groupMessagesByDate(messages);\n\n  // Formater la date pour l'affichage\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const today = new Date();\n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n    if (date.toDateString() === today.toDateString()) {\n      return 'Aujourd\\'hui';\n    } else if (date.toDateString() === yesterday.toDateString()) {\n      return 'Hier';\n    } else {\n      return date.toLocaleDateString('fr-FR', {\n        day: 'numeric',\n        month: 'long',\n        year: 'numeric'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-messages\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Chargement des messages...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-messages\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Aucun message. Commencez la conversation!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [Object.entries(messageGroups).map(([date, messagesGroup]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-separator\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: formatDate(date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), messagesGroup.map(message => /*#__PURE__*/_jsxDEV(Message, {\n          message: message,\n          isOwnMessage: message.sender === currentUser.id\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this))]\n      }, date, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"gj5NeBacuMQYXI6y67oRBTGMWDU=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useContext","useEffect","useRef","ChatContext","AuthContext","Message","jsxDEV","_jsxDEV","ChatWindow","_s","messages","loading","currentUser","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","groupMessagesByDate","groups","forEach","message","date","Date","timestamp","toLocaleDateString","push","messageGroups","formatDate","dateString","today","yesterday","setDate","getDate","toDateString","day","month","year","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Object","entries","map","messagesGroup","isOwnMessage","sender","id","ref","_c","$RefreshReg$"],"sources":["/home/mehdycament/Bureau/app_message_symfony/chat-page/src/components/Chat/ChatWindow.js"],"sourcesContent":["import React, { useContext, useEffect, useRef } from 'react';\nimport { ChatContext } from '../../contexts/ChatContext';\nimport { AuthContext } from '../../contexts/AuthContext';\nimport Message from './Message';\n\nconst ChatWindow = () => {\n  const { messages, loading } = useContext(ChatContext);\n  const { currentUser } = useContext(AuthContext);\n  const messagesEndRef = useRef(null);\n  \n  // Faire défiler automatiquement vers le bas lorsque de nouveaux messages arrivent\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n  \n  // Fonction pour grouper les messages par date\n  const groupMessagesByDate = (messages) => {\n    const groups = {};\n    \n    messages.forEach(message => {\n      const date = new Date(message.timestamp).toLocaleDateString();\n      if (!groups[date]) {\n        groups[date] = [];\n      }\n      groups[date].push(message);\n    });\n    \n    return groups;\n  };\n  \n  const messageGroups = groupMessagesByDate(messages);\n  \n  // Formater la date pour l'affichage\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    const today = new Date();\n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n    \n    if (date.toDateString() === today.toDateString()) {\n      return 'Aujourd\\'hui';\n    } else if (date.toDateString() === yesterday.toDateString()) {\n      return 'Hier';\n    } else {\n      return date.toLocaleDateString('fr-FR', {\n        day: 'numeric',\n        month: 'long',\n        year: 'numeric'\n      });\n    }\n  };\n\n  return (\n    <div className=\"chat-window\">\n      {loading ? (\n        <div className=\"loading-messages\">\n          <div className=\"spinner\"></div>\n          <p>Chargement des messages...</p>\n        </div>\n      ) : messages.length === 0 ? (\n        <div className=\"no-messages\">\n          <p>Aucun message. Commencez la conversation!</p>\n        </div>\n      ) : (\n        <div className=\"messages-container\">\n          {Object.entries(messageGroups).map(([date, messagesGroup]) => (\n            <div key={date} className=\"message-group\">\n              <div className=\"date-separator\">\n                <span>{formatDate(date)}</span>\n              </div>\n              \n              {messagesGroup.map((message) => (\n                <Message\n                  key={message.id}\n                  message={message}\n                  isOwnMessage={message.sender === currentUser.id}\n                />\n              ))}\n            </div>\n          ))}\n          <div ref={messagesEndRef} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatWindow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}