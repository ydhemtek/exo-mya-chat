{"ast":null,"code":"var _jsxFileName = \"/home/mehdycament/Bureau/app_message_symfony/chat-page/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { register, login, logout } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Récupérer l'utilisateur à partir du localStorage\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user) {\n      setCurrentUser(user);\n    }\n    setLoading(false);\n  }, []);\n  const registerUser = async (username, email, password) => {\n    try {\n      const user = await register(username, email, password);\n      setCurrentUser(user);\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('token', user.token);\n      return user;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const loginUser = async (email, password) => {\n    try {\n      const user = await login(email, password);\n      setCurrentUser(user);\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('token', user.token);\n      return user;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logoutUser = () => {\n    logout();\n    setCurrentUser(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      loading,\n      registerUser,\n      loginUser,\n      logoutUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","register","login","logout","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","user","JSON","parse","localStorage","getItem","registerUser","username","email","password","setItem","stringify","token","error","loginUser","logoutUser","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mehdycament/Bureau/app_message_symfony/chat-page/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { register, login, logout } from '../services/authService';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Récupérer l'utilisateur à partir du localStorage\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user) {\n      setCurrentUser(user);\n    }\n    setLoading(false);\n  }, []);\n\n  const registerUser = async (username, email, password) => {\n    try {\n      const user = await register(username, email, password);\n      setCurrentUser(user);\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('token', user.token);\n      return user;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const loginUser = async (email, password) => {\n    try {\n      const user = await login(email, password);\n      setCurrentUser(user);\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('token', user.token);\n      return user;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logoutUser = () => {\n    logout();\n    setCurrentUser(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser,\n        loading,\n        registerUser,\n        loginUser,\n        logoutUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,QAAQ,EAAEC,KAAK,EAAEC,MAAM,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMS,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IACrD,IAAIJ,IAAI,EAAE;MACRH,cAAc,CAACG,IAAI,CAAC;IACtB;IACAD,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,YAAY,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,KAAK;IACxD,IAAI;MACF,MAAMR,IAAI,GAAG,MAAMb,QAAQ,CAACmB,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,CAAC;MACtDX,cAAc,CAACG,IAAI,CAAC;MACpBG,YAAY,CAACM,OAAO,CAAC,MAAM,EAAER,IAAI,CAACS,SAAS,CAACV,IAAI,CAAC,CAAC;MAClDG,YAAY,CAACM,OAAO,CAAC,OAAO,EAAET,IAAI,CAACW,KAAK,CAAC;MACzC,OAAOX,IAAI;IACb,CAAC,CAAC,OAAOY,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMC,SAAS,GAAG,MAAAA,CAAON,KAAK,EAAEC,QAAQ,KAAK;IAC3C,IAAI;MACF,MAAMR,IAAI,GAAG,MAAMZ,KAAK,CAACmB,KAAK,EAAEC,QAAQ,CAAC;MACzCX,cAAc,CAACG,IAAI,CAAC;MACpBG,YAAY,CAACM,OAAO,CAAC,MAAM,EAAER,IAAI,CAACS,SAAS,CAACV,IAAI,CAAC,CAAC;MAClDG,YAAY,CAACM,OAAO,CAAC,OAAO,EAAET,IAAI,CAACW,KAAK,CAAC;MACzC,OAAOX,IAAI;IACb,CAAC,CAAC,OAAOY,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAME,UAAU,GAAGA,CAAA,KAAM;IACvBzB,MAAM,CAAC,CAAC;IACRQ,cAAc,CAAC,IAAI,CAAC;IACpBM,YAAY,CAACY,UAAU,CAAC,MAAM,CAAC;IAC/BZ,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;EAClC,CAAC;EAED,oBACExB,OAAA,CAACC,WAAW,CAACwB,QAAQ;IACnBC,KAAK,EAAE;MACLrB,WAAW;MACXE,OAAO;MACPO,YAAY;MACZQ,SAAS;MACTC;IACF,CAAE;IAAApB,QAAA,EAEDA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC1B,EAAA,CAzDWF,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}