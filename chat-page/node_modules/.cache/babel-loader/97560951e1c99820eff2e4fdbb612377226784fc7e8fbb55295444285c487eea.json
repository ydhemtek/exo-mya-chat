{"ast":null,"code":"var _jsxFileName = \"/home/mehdycament/Bureau/app_message_symfony/chat-page/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// URL du serveur socket.io\nconst SOCKET_URL = 'http://localhost:5000';\nlet socket;\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Récupérer l'utilisateur à partir du localStorage\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user) {\n      setCurrentUser(user);\n\n      // Initialiser la connexion socket\n      if (!socket) {\n        socket = io(SOCKET_URL);\n        socket.on('connect', () => {\n          // Enregistrer l'utilisateur sur le serveur socket\n          socket.emit('register', user);\n        });\n      }\n    }\n    setLoading(false);\n  }, []);\n  const registerUser = async (username, email, password) => {\n    try {\n      setError(null);\n\n      // Initialiser la connexion socket si nécessaire\n      if (!socket) {\n        socket = io(SOCKET_URL);\n      }\n\n      // Créer un nouvel utilisateur\n      const newUser = {\n        id: Date.now().toString(),\n        username,\n        email,\n        password\n      };\n\n      // Envoyer les données d'inscription au serveur socket\n      socket.emit('register', newUser);\n\n      // Attendre la réponse du serveur\n      return new Promise((resolve, reject) => {\n        socket.once('registration_success', user => {\n          // Stocker l'utilisateur sans mot de passe\n          const userWithoutPassword = {\n            ...user\n          };\n          delete userWithoutPassword.password;\n          setCurrentUser(userWithoutPassword);\n          localStorage.setItem('user', JSON.stringify(userWithoutPassword));\n          resolve(userWithoutPassword);\n        });\n        socket.once('registration_error', error => {\n          setError(error.message);\n          reject(error);\n        });\n\n        // Timeout de 5 secondes\n        setTimeout(() => {\n          reject({\n            message: \"Délai d'attente dépassé pour l'inscription\"\n          });\n        }, 5000);\n      });\n    } catch (error) {\n      setError(error.message);\n      throw error;\n    }\n  };\n  const loginUser = async (email, password) => {\n    try {\n      setError(null);\n\n      // Initialiser la connexion socket si nécessaire\n      if (!socket) {\n        socket = io(SOCKET_URL);\n      }\n\n      // Envoyer les identifiants au serveur socket\n      socket.emit('login', {\n        email,\n        password\n      });\n\n      // Attendre la réponse du serveur\n      return new Promise((resolve, reject) => {\n        socket.once('login_success', user => {\n          // Stocker l'utilisateur sans mot de passe\n          const userWithoutPassword = {\n            ...user\n          };\n          delete userWithoutPassword.password;\n          setCurrentUser(userWithoutPassword);\n          localStorage.setItem('user', JSON.stringify(userWithoutPassword));\n          resolve(userWithoutPassword);\n        });\n        socket.once('login_error', error => {\n          setError(error.message);\n          reject(error);\n        });\n\n        // Timeout de 5 secondes\n        setTimeout(() => {\n          reject({\n            message: \"Délai d'attente dépassé pour la connexion\"\n          });\n        }, 5000);\n      });\n    } catch (error) {\n      setError(error.message);\n      throw error;\n    }\n  };\n  const logoutUser = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('user');\n\n    // Déconnecter le socket\n    if (socket) {\n      socket.disconnect();\n      socket = null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      loading,\n      error,\n      registerUser,\n      loginUser,\n      logoutUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"JNizP9FwoqjqDhcaQoKbEEqEJbk=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","io","jsxDEV","_jsxDEV","AuthContext","SOCKET_URL","socket","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","error","setError","user","JSON","parse","localStorage","getItem","on","emit","registerUser","username","email","password","newUser","id","Date","now","toString","Promise","resolve","reject","once","userWithoutPassword","setItem","stringify","message","setTimeout","loginUser","logoutUser","removeItem","disconnect","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mehdycament/Bureau/app_message_symfony/chat-page/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport io from 'socket.io-client';\n\nexport const AuthContext = createContext();\n\n// URL du serveur socket.io\nconst SOCKET_URL = 'http://localhost:5000';\nlet socket;\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Récupérer l'utilisateur à partir du localStorage\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user) {\n      setCurrentUser(user);\n      \n      // Initialiser la connexion socket\n      if (!socket) {\n        socket = io(SOCKET_URL);\n        \n        socket.on('connect', () => {\n          // Enregistrer l'utilisateur sur le serveur socket\n          socket.emit('register', user);\n        });\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  const registerUser = async (username, email, password) => {\n    try {\n      setError(null);\n      \n      // Initialiser la connexion socket si nécessaire\n      if (!socket) {\n        socket = io(SOCKET_URL);\n      }\n      \n      // Créer un nouvel utilisateur\n      const newUser = {\n        id: Date.now().toString(),\n        username,\n        email,\n        password,\n      };\n      \n      // Envoyer les données d'inscription au serveur socket\n      socket.emit('register', newUser);\n      \n      // Attendre la réponse du serveur\n      return new Promise((resolve, reject) => {\n        socket.once('registration_success', (user) => {\n          // Stocker l'utilisateur sans mot de passe\n          const userWithoutPassword = { ...user };\n          delete userWithoutPassword.password;\n          \n          setCurrentUser(userWithoutPassword);\n          localStorage.setItem('user', JSON.stringify(userWithoutPassword));\n          resolve(userWithoutPassword);\n        });\n        \n        socket.once('registration_error', (error) => {\n          setError(error.message);\n          reject(error);\n        });\n        \n        // Timeout de 5 secondes\n        setTimeout(() => {\n          reject({ message: \"Délai d'attente dépassé pour l'inscription\" });\n        }, 5000);\n      });\n    } catch (error) {\n      setError(error.message);\n      throw error;\n    }\n  };\n\n  const loginUser = async (email, password) => {\n    try {\n      setError(null);\n      \n      // Initialiser la connexion socket si nécessaire\n      if (!socket) {\n        socket = io(SOCKET_URL);\n      }\n      \n      // Envoyer les identifiants au serveur socket\n      socket.emit('login', { email, password });\n      \n      // Attendre la réponse du serveur\n      return new Promise((resolve, reject) => {\n        socket.once('login_success', (user) => {\n          // Stocker l'utilisateur sans mot de passe\n          const userWithoutPassword = { ...user };\n          delete userWithoutPassword.password;\n          \n          setCurrentUser(userWithoutPassword);\n          localStorage.setItem('user', JSON.stringify(userWithoutPassword));\n          resolve(userWithoutPassword);\n        });\n        \n        socket.once('login_error', (error) => {\n          setError(error.message);\n          reject(error);\n        });\n        \n        // Timeout de 5 secondes\n        setTimeout(() => {\n          reject({ message: \"Délai d'attente dépassé pour la connexion\" });\n        }, 5000);\n      });\n    } catch (error) {\n      setError(error.message);\n      throw error;\n    }\n  };\n\n  const logoutUser = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('user');\n    \n    // Déconnecter le socket\n    if (socket) {\n      socket.disconnect();\n      socket = null;\n    }\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser,\n        loading,\n        error,\n        registerUser,\n        loginUser,\n        logoutUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}