{"ast":null,"code":"var _jsxFileName = \"/home/mehdycament/Bureau/app_message_symfony/chat-page/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Récupérer l'utilisateur à partir du localStorage\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user) {\n      setCurrentUser(user);\n    }\n    setLoading(false);\n  }, []);\n  const registerUser = async (username, email, password) => {\n    try {\n      // Simuler une requête API\n      await new Promise(resolve => setTimeout(resolve, 500));\n\n      // Créer un nouvel utilisateur\n      const user = {\n        id: Date.now().toString(),\n        username,\n        email,\n        token: 'fake-jwt-token'\n      };\n      setCurrentUser(user);\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('token', user.token);\n      return user;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const loginUser = async (email, password) => {\n    try {\n      // Simuler une requête API\n      await new Promise(resolve => setTimeout(resolve, 500));\n\n      // Utilisateur de test\n      const user = {\n        id: '123456',\n        username: 'testuser',\n        email,\n        token: 'fake-jwt-token'\n      };\n      setCurrentUser(user);\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('token', user.token);\n      return user;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logoutUser = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      loading,\n      registerUser,\n      loginUser,\n      logoutUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","user","JSON","parse","localStorage","getItem","registerUser","username","email","password","Promise","resolve","setTimeout","id","Date","now","toString","token","setItem","stringify","error","loginUser","logoutUser","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mehdycament/Bureau/app_message_symfony/chat-page/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Récupérer l'utilisateur à partir du localStorage\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user) {\n      setCurrentUser(user);\n    }\n    setLoading(false);\n  }, []);\n\n  const registerUser = async (username, email, password) => {\n    try {\n      // Simuler une requête API\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      // Créer un nouvel utilisateur\n      const user = {\n        id: Date.now().toString(),\n        username,\n        email,\n        token: 'fake-jwt-token'\n      };\n      \n      setCurrentUser(user);\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('token', user.token);\n      return user;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const loginUser = async (email, password) => {\n    try {\n      // Simuler une requête API\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      // Utilisateur de test\n      const user = {\n        id: '123456',\n        username: 'testuser',\n        email,\n        token: 'fake-jwt-token'\n      };\n      \n      setCurrentUser(user);\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('token', user.token);\n      return user;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logoutUser = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser,\n        loading,\n        registerUser,\n        loginUser,\n        logoutUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}